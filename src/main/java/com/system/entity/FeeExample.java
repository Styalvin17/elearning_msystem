package com.system.entity;

import java.util.ArrayList;
import java.util.List;

public class FeeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public FeeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFidIsNull() {
            addCriterion("fId is null");
            return (Criteria) this;
        }

        public Criteria andFidIsNotNull() {
            addCriterion("fId is not null");
            return (Criteria) this;
        }

        public Criteria andFidEqualTo(Integer value) {
            addCriterion("fId =", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotEqualTo(Integer value) {
            addCriterion("fId <>", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidGreaterThan(Integer value) {
            addCriterion("fId >", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidGreaterThanOrEqualTo(Integer value) {
            addCriterion("fId >=", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidLessThan(Integer value) {
            addCriterion("fId <", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidLessThanOrEqualTo(Integer value) {
            addCriterion("fId <=", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidIn(List<Integer> values) {
            addCriterion("fId in", values, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotIn(List<Integer> values) {
            addCriterion("fId not in", values, "fid");
            return (Criteria) this;
        }

        public Criteria andFidBetween(Integer value1, Integer value2) {
            addCriterion("fId between", value1, value2, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotBetween(Integer value1, Integer value2) {
            addCriterion("fId not between", value1, value2, "fid");
            return (Criteria) this;
        }

        public Criteria andFamountIsNull() {
            addCriterion("fAmount is null");
            return (Criteria) this;
        }

        public Criteria andFamountIsNotNull() {
            addCriterion("fAmount is not null");
            return (Criteria) this;
        }

        public Criteria andFamountEqualTo(String value) {
            addCriterion("fAmount =", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountNotEqualTo(String value) {
            addCriterion("fAmount <>", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountGreaterThan(String value) {
            addCriterion("fAmount >", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountGreaterThanOrEqualTo(String value) {
            addCriterion("fAmount >=", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountLessThan(String value) {
            addCriterion("fAmount <", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountLessThanOrEqualTo(String value) {
            addCriterion("fAmount <=", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountLike(String value) {
            addCriterion("fAmount like", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountNotLike(String value) {
            addCriterion("fAmount not like", value, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountIn(List<String> values) {
            addCriterion("fAmount in", values, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountNotIn(List<String> values) {
            addCriterion("fAmount not in", values, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountBetween(String value1, String value2) {
            addCriterion("fAmount between", value1, value2, "famount");
            return (Criteria) this;
        }

        public Criteria andFamountNotBetween(String value1, String value2) {
            addCriterion("fAmount not between", value1, value2, "famount");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameIsNull() {
            addCriterion("fPayerUsername is null");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameIsNotNull() {
            addCriterion("fPayerUsername is not null");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameEqualTo(String value) {
            addCriterion("fPayerUsername =", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameNotEqualTo(String value) {
            addCriterion("fPayerUsername <>", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameGreaterThan(String value) {
            addCriterion("fPayerUsername >", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameGreaterThanOrEqualTo(String value) {
            addCriterion("fPayerUsername >=", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameLessThan(String value) {
            addCriterion("fPayerUsername <", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameLessThanOrEqualTo(String value) {
            addCriterion("fPayerUsername <=", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameLike(String value) {
            addCriterion("fPayerUsername like", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameNotLike(String value) {
            addCriterion("fPayerUsername not like", value, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameIn(List<String> values) {
            addCriterion("fPayerUsername in", values, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameNotIn(List<String> values) {
            addCriterion("fPayerUsername not in", values, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameBetween(String value1, String value2) {
            addCriterion("fPayerUsername between", value1, value2, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFpayerusernameNotBetween(String value1, String value2) {
            addCriterion("fPayerUsername not between", value1, value2, "fpayerusername");
            return (Criteria) this;
        }

        public Criteria andFstatusIsNull() {
            addCriterion("fStatus is null");
            return (Criteria) this;
        }

        public Criteria andFstatusIsNotNull() {
            addCriterion("fStatus is not null");
            return (Criteria) this;
        }

        public Criteria andFstatusEqualTo(Integer value) {
            addCriterion("fStatus =", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusNotEqualTo(Integer value) {
            addCriterion("fStatus <>", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusGreaterThan(Integer value) {
            addCriterion("fStatus >", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("fStatus >=", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusLessThan(Integer value) {
            addCriterion("fStatus <", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusLessThanOrEqualTo(Integer value) {
            addCriterion("fStatus <=", value, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusIn(List<Integer> values) {
            addCriterion("fStatus in", values, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusNotIn(List<Integer> values) {
            addCriterion("fStatus not in", values, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusBetween(Integer value1, Integer value2) {
            addCriterion("fStatus between", value1, value2, "fstatus");
            return (Criteria) this;
        }

        public Criteria andFstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("fStatus not between", value1, value2, "fstatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated do_not_delete_during_merge Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated Fri Apr 10 19:27:31 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}